import{_ as l,c as n,a as s,o as i}from"./app-BOQqPwmR.js";const a={};function t(o,e){return i(),n("div",null,e[0]||(e[0]=[s(`<h1 id="phpstorm-效率" tabindex="-1"><a class="header-anchor" href="#phpstorm-效率"><span>PhpStorm 效率</span></a></h1><p>整理并归类 PhpStorm 使用中的快捷键、设置路径、实用技巧等，适合部署在 Cheatsheet 页面中查阅。</p><hr><h2 id="🧭-导航与查找" tabindex="-1"><a class="header-anchor" href="#🧭-导航与查找"><span>🧭 导航与查找</span></a></h2><ul><li><strong>快速导航搜索</strong>：<code>Shift + Shift</code></li><li><strong>最近打开的文件</strong>：<code>Cmd + E</code></li><li><strong>最近访问文件位置</strong>：<code>Cmd + Shift + E</code></li><li><strong>上/下一个光标位置跳转</strong>：<code>Cmd + [</code> / <code>Cmd + ]</code></li><li><strong>扩大选区（Expand Selection）</strong>：<code>Alt + ↑</code></li><li><strong>缩小选区（Shrink Selection）</strong>：<code>Alt + ↓</code></li><li><strong>最近使用的剪贴板</strong>：<code>Cmd + Shift + V</code></li><li><strong>包裹代码结构（如 try/catch）</strong>：<code>Alt + Cmd + T</code></li></ul><hr><h2 id="🧱-代码结构与跳转" tabindex="-1"><a class="header-anchor" href="#🧱-代码结构与跳转"><span>🧱 代码结构与跳转</span></a></h2><ul><li><strong>查看文件结构</strong>：<code>Cmd + F12</code></li><li><strong>跳转到定义 / 实现</strong>： <ul><li><code>Cmd + B</code>（跳转定义）</li><li><code>Cmd + Alt + B</code>（跳转所有实现）</li></ul></li><li><strong>快速查看定义（不跳转）</strong>：<code>Cmd + Y</code></li><li><strong>结构视图与书签</strong>： <ul><li>打开结构视图：<code>Cmd + 7</code></li><li>添加书签：<code>F3</code>，查看所有书签：<code>Cmd + F3</code></li><li>设置助记书签：<code>Alt + F3</code>，快速跳转：<code>Ctrl + 1~9</code></li></ul></li></ul><hr><h2 id="⚙️-自动导入与代码优化" tabindex="-1"><a class="header-anchor" href="#⚙️-自动导入与代码优化"><span>⚙️ 自动导入与代码优化</span></a></h2><ul><li><strong>自动导入类/函数</strong>：输入名称后 <code>Alt + Enter</code></li><li><strong>优化 import</strong>：<code>Ctrl + Alt + O</code></li></ul><hr><h2 id="🛠️-重构工具与代码整理" tabindex="-1"><a class="header-anchor" href="#🛠️-重构工具与代码整理"><span>🛠️ 重构工具与代码整理</span></a></h2><ul><li><strong>提取变量</strong>：<code>Cmd + Alt + V</code></li><li><strong>提取常量</strong>：<code>Cmd + Alt + C</code></li><li><strong>提取方法</strong>：<code>Cmd + Alt + M</code></li><li><strong>查找与替换</strong>： <ul><li>当前文件：<code>Cmd + F</code>（查找） / <code>Cmd + R</code>（替换）</li><li>全项目：<code>Cmd + Shift + F</code> / <code>Cmd + Shift + R</code></li></ul></li></ul><hr><h2 id="🐞-调试与运行配置" tabindex="-1"><a class="header-anchor" href="#🐞-调试与运行配置"><span>🐞 调试与运行配置</span></a></h2><ul><li>PhpStorm 使用「运行配置」控制运行/调试方式</li><li>可为不同目的保存多个运行配置： <ul><li>调试单文件</li><li>运行测试类</li><li>调用 Artisan 命令</li><li>请求 HTTP 请求</li></ul></li></ul><h3 id="✅-phpunit-测试配置步骤" tabindex="-1"><a class="header-anchor" href="#✅-phpunit-测试配置步骤"><span>✅ PHPUnit 测试配置步骤</span></a></h3><ol><li>设置 PHPUnit： <ul><li>设置 → PHP → 测试框架 → 新增配置（本地/远程解释器）</li></ul></li><li>添加运行配置： <ul><li>运行 → 编辑配置 → 新增 phpunit</li><li>设置名称、选择 tests 目录、解释器</li></ul></li><li>运行测试：点击右上角绿色三角</li><li>调试测试：点击虫子图标（需配置 Xdebug）</li></ol><hr><h2 id="🌿-git-与版本控制" tabindex="-1"><a class="header-anchor" href="#🌿-git-与版本控制"><span>🌿 Git 与版本控制</span></a></h2><ul><li><strong>贮藏改动（Stash）</strong>：Git → 未提交更改 → 搁置更改</li><li><strong>提交代码</strong>：<code>Cmd + K</code></li><li><strong>推送代码</strong>：<code>Cmd + Shift + K</code></li><li><strong>拉取代码</strong>：<code>Cmd + T</code></li><li><strong>比较差异</strong>：<code>Cmd + D</code></li><li><strong>回滚更改</strong>：<code>Cmd + Alt + Z</code></li></ul><hr><h2 id="📦-composer-工具集成与包管理" tabindex="-1"><a class="header-anchor" href="#📦-composer-工具集成与包管理"><span>📦 Composer 工具集成与包管理</span></a></h2><ul><li>设置路径：设置 → PHP → Composer</li><li>若使用容器，解释器需选远程解释器</li></ul><hr><h2 id="🧹-代码风格与格式化配置" tabindex="-1"><a class="header-anchor" href="#🧹-代码风格与格式化配置"><span>🧹 代码风格与格式化配置</span></a></h2><ul><li><strong>代码格式化快捷键</strong>：<code>Cmd + Alt + L</code></li><li>设置路径：设置 → 编辑器 → 代码样式 → PHP</li></ul><hr><h2 id="🔍-实时代码检查与问题修复" tabindex="-1"><a class="header-anchor" href="#🔍-实时代码检查与问题修复"><span>🔍 实时代码检查与问题修复</span></a></h2><ul><li>设置路径：设置 → 编辑器 → 检查 → PHP</li><li>查看问题：<code>Cmd + 6</code> 或左下角感叹号图标</li><li>快速修复：<code>Alt + Enter</code></li></ul><h3 id="🔧-批量清理与检查技巧" tabindex="-1"><a class="header-anchor" href="#🔧-批量清理与检查技巧"><span>🔧 批量清理与检查技巧</span></a></h3><ul><li>代码清理： <ul><li>文件/目录右键 → 重新设置代码格式</li><li>菜单栏：代码 → 代码清理</li></ul></li><li>检查代码： <ul><li>菜单栏：代码 → 检查代码（不会自动清理）</li></ul></li></ul><hr><h2 id="🪄-代码生成与模板" tabindex="-1"><a class="header-anchor" href="#🪄-代码生成与模板"><span>🪄 代码生成与模板</span></a></h2><ul><li><strong>快速生成</strong>： <ul><li>支持构造函数、getter/setter、PHPDoc、重写方法等</li><li>快捷键：<code>Cmd + N</code></li></ul></li><li><strong>文件模板</strong>： <ul><li>设置 → 编辑器 → 文件和代码模板</li></ul></li><li><strong>实时模板（代码片段）</strong>： <ul><li>设置 → 编辑器 → 实时模板</li></ul></li></ul><hr><h2 id="🐳-docker-与远程开发支持" tabindex="-1"><a class="header-anchor" href="#🐳-docker-与远程开发支持"><span>🐳 Docker 与远程开发支持</span></a></h2><ul><li>可配置 Docker 或 SSH 远程解释器</li><li>提高开发环境与部署环境一致性</li></ul><hr><h2 id="🧰-makefile-与任务自动化" tabindex="-1"><a class="header-anchor" href="#🧰-makefile-与任务自动化"><span>🧰 Makefile 与任务自动化</span></a></h2><h3 id="示例-makefile" tabindex="-1"><a class="header-anchor" href="#示例-makefile"><span>示例 Makefile</span></a></h3><div class="language-makefile line-numbers-mode" data-highlighter="prismjs" data-ext="makefile" data-title="makefile"><pre><code><span class="line"><span class="token builtin-target builtin">.PHONY</span><span class="token punctuation">:</span> test stan pint ide</span>
<span class="line"></span>
<span class="line"><span class="token target symbol">test</span><span class="token punctuation">:</span></span>
<span class="line">	docker compose exec app php artisan test</span>
<span class="line"></span>
<span class="line"><span class="token target symbol">stan</span><span class="token punctuation">:</span></span>
<span class="line">	docker compose exec app vendor/bin/phpstan analyse</span>
<span class="line"></span>
<span class="line"><span class="token target symbol">pint</span><span class="token punctuation">:</span></span>
<span class="line">	docker compose exec app vendor/bin/pint --dirty</span>
<span class="line"></span>
<span class="line"><span class="token target symbol">ide</span><span class="token punctuation">:</span></span>
<span class="line"><span class="token target symbol">	docker compose exec app php artisan ide-helper</span><span class="token punctuation">:</span>generate</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="执行方式" tabindex="-1"><a class="header-anchor" href="#执行方式"><span>执行方式</span></a></h3><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token function">make</span> <span class="token builtin class-name">test</span>    <span class="token comment"># 运行测试</span></span>
<span class="line"><span class="token function">make</span> stan    <span class="token comment"># 静态分析</span></span>
<span class="line"><span class="token function">make</span> pint    <span class="token comment"># 格式化代码</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,45)]))}const c=l(a,[["render",t],["__file","index.html.vue"]]),r=JSON.parse('{"path":"/phpstorm/","title":"PhpStorm 效率","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"🧭 导航与查找","slug":"🧭-导航与查找","link":"#🧭-导航与查找","children":[]},{"level":2,"title":"🧱 代码结构与跳转","slug":"🧱-代码结构与跳转","link":"#🧱-代码结构与跳转","children":[]},{"level":2,"title":"⚙️ 自动导入与代码优化","slug":"⚙️-自动导入与代码优化","link":"#⚙️-自动导入与代码优化","children":[]},{"level":2,"title":"🛠️ 重构工具与代码整理","slug":"🛠️-重构工具与代码整理","link":"#🛠️-重构工具与代码整理","children":[]},{"level":2,"title":"🐞 调试与运行配置","slug":"🐞-调试与运行配置","link":"#🐞-调试与运行配置","children":[{"level":3,"title":"✅ PHPUnit 测试配置步骤","slug":"✅-phpunit-测试配置步骤","link":"#✅-phpunit-测试配置步骤","children":[]}]},{"level":2,"title":"🌿 Git 与版本控制","slug":"🌿-git-与版本控制","link":"#🌿-git-与版本控制","children":[]},{"level":2,"title":"📦 Composer 工具集成与包管理","slug":"📦-composer-工具集成与包管理","link":"#📦-composer-工具集成与包管理","children":[]},{"level":2,"title":"🧹 代码风格与格式化配置","slug":"🧹-代码风格与格式化配置","link":"#🧹-代码风格与格式化配置","children":[]},{"level":2,"title":"🔍 实时代码检查与问题修复","slug":"🔍-实时代码检查与问题修复","link":"#🔍-实时代码检查与问题修复","children":[{"level":3,"title":"🔧 批量清理与检查技巧","slug":"🔧-批量清理与检查技巧","link":"#🔧-批量清理与检查技巧","children":[]}]},{"level":2,"title":"🪄 代码生成与模板","slug":"🪄-代码生成与模板","link":"#🪄-代码生成与模板","children":[]},{"level":2,"title":"🐳 Docker 与远程开发支持","slug":"🐳-docker-与远程开发支持","link":"#🐳-docker-与远程开发支持","children":[]},{"level":2,"title":"🧰 Makefile 与任务自动化","slug":"🧰-makefile-与任务自动化","link":"#🧰-makefile-与任务自动化","children":[{"level":3,"title":"示例 Makefile","slug":"示例-makefile","link":"#示例-makefile","children":[]},{"level":3,"title":"执行方式","slug":"执行方式","link":"#执行方式","children":[]}]}],"git":{"updatedTime":1753537482000,"contributors":[{"name":"keith","username":"keith","email":"1033610335@qq.com","commits":1,"url":"https://github.com/keith"}]},"filePathRelative":"phpstorm/README.md"}');export{c as comp,r as data};
